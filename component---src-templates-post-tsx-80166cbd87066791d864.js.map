{"version":3,"sources":["webpack:///./src/templates/Post.tsx"],"names":["PostContent","styled","div","PostPage","render","this","props","pathContext","prev","next","post","data","markdownRemark","postPath","fields","slug","postNode","postSEO","title","frontmatter","config","siteTitle","banner","to","light","date","timeToRead","kebabCase","category","dangerouslySetInnerHTML","__html","html","tags","map","tag","i","key","length","React","PureComponent","postQuery"],"mappings":"kTAWA,IAAMA,EAAcC,IAAOC,IAAV,oEAAGD,CAAH,sBAWIE,E,gLACZC,OAAP,WAAgB,MACSC,KAAKC,MAAMC,YAA1BC,EADM,EACNA,KAAMC,EADA,EACAA,KACRC,EAAOL,KAAKC,MAAMK,KAAKC,eAC7B,OACE,kBAAC,IAAD,KACGF,EACC,oCACE,kBAAC,IAAD,CAAKG,SAAUH,EAAKI,OAAOC,KAAMC,SAAUN,EAAMO,SAAO,IACxD,kBAAC,IAAD,CAAQC,MAAUR,EAAKS,YAAYD,MAAtB,MAAiCE,IAAOC,YACrD,kBAAC,IAAD,CAAQC,OAAQZ,EAAKS,YAAYG,QAC/B,kBAAC,OAAD,CAAMC,GAAG,KAAKH,IAAOC,WACrB,kBAAC,IAAD,KAAeX,EAAKS,YAAYD,OAChC,kBAAC,IAAD,CAASM,OAAO,GACbd,EAAKS,YAAYM,KADpB,MACmCf,EAAKgB,WADxC,iBACwE,IACtE,kBAAC,OAAD,CAAMH,GAAE,eAAiBI,IAAUjB,EAAKS,YAAYS,WAAclB,EAAKS,YAAYS,YAGvF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC5B,EAAD,CAAa6B,wBAAyB,CAAEC,OAAQpB,EAAKqB,QACpDrB,EAAKS,YAAYa,KAChB,kBAAC,IAAD,eAEGtB,EAAKS,YAAYa,KAAKC,KAAI,SAACC,EAAKC,GAAN,OACzB,kBAAC,OAAD,CAAMC,IAAKD,EAAGZ,GAAE,SAAWI,IAAUO,IACnC,gCAASA,GADX,IAC0BC,EAAIzB,EAAKS,YAAYa,KAAKK,OAAS,EAAnC,aAI5B,KACJ,kBAAC,IAAD,CAAU7B,KAAMA,EAAMC,KAAMA,OAIhC,O,GAnC0B6B,IAAMC,eAyC/BC,EAAY","file":"component---src-templates-post-tsx-80166cbd87066791d864.js","sourcesContent":["import React from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport { Link, graphql } from 'gatsby';\r\nimport styled from 'styled-components';\r\nimport kebabCase from 'lodash/kebabCase';\r\nimport { Layout, Wrapper, Header, Subline, SEO, PrevNext, SectionTitle, Content } from '../components';\r\nimport config from '../../config/SiteConfig';\r\nimport '../utils/prismjs-theme.css';\r\nimport PathContext from '../models/PathContext';\r\nimport Post from '../models/Post';\r\n\r\nconst PostContent = styled.div`\r\n  margin-top: 4rem;\r\n`;\r\n\r\ninterface Props {\r\n  data: {\r\n    markdownRemark: Post;\r\n  };\r\n  pathContext: PathContext;\r\n}\r\n\r\nexport default class PostPage extends React.PureComponent<Props> {\r\n  public render() {\r\n    const { prev, next } = this.props.pathContext;\r\n    const post = this.props.data.markdownRemark;\r\n    return (\r\n      <Layout>\r\n        {post ? (\r\n          <>\r\n            <SEO postPath={post.fields.slug} postNode={post} postSEO />\r\n            <Helmet title={`${post.frontmatter.title} | ${config.siteTitle}`} />\r\n            <Header banner={post.frontmatter.banner}>\r\n              <Link to=\"/\">{config.siteTitle}</Link>\r\n              <SectionTitle>{post.frontmatter.title}</SectionTitle>\r\n              <Subline light={true}>\r\n                {post.frontmatter.date} &mdash; {post.timeToRead} Min Read &mdash; In{' '}\r\n                <Link to={`/categories/${kebabCase(post.frontmatter.category)}`}>{post.frontmatter.category}</Link>\r\n              </Subline>\r\n            </Header>\r\n            <Wrapper>\r\n              <Content>\r\n                <PostContent dangerouslySetInnerHTML={{ __html: post.html }} />\r\n                {post.frontmatter.tags ? (\r\n                  <Subline>\r\n                    Tags: &#160;\r\n                    {post.frontmatter.tags.map((tag, i) => (\r\n                      <Link key={i} to={`/tags/${kebabCase(tag)}`}>\r\n                        <strong>{tag}</strong> {i < post.frontmatter.tags.length - 1 ? `, ` : ``}\r\n                      </Link>\r\n                    ))}\r\n                  </Subline>\r\n                ) : null}\r\n                <PrevNext prev={prev} next={next} />\r\n              </Content>\r\n            </Wrapper>\r\n          </>\r\n        ) : null}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport const postQuery = graphql`\r\n  query($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"DD.MM.YYYY\")\r\n        category\r\n        tags\r\n        banner\r\n      }\r\n      timeToRead\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}